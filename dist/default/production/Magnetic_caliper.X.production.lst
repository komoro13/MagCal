

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Tue Dec 28 00:33:08 2021

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F877A Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  010C                     	;# 
   111  010D                     	;# 
   112  010E                     	;# 
   113  010F                     	;# 
   114  018C                     	;# 
   115  018D                     	;# 
   116  0000                     	;# 
   117  0001                     	;# 
   118  0002                     	;# 
   119  0003                     	;# 
   120  0004                     	;# 
   121  0005                     	;# 
   122  0006                     	;# 
   123  0007                     	;# 
   124  0008                     	;# 
   125  0009                     	;# 
   126  000A                     	;# 
   127  000B                     	;# 
   128  000C                     	;# 
   129  000D                     	;# 
   130  000E                     	;# 
   131  000E                     	;# 
   132  000F                     	;# 
   133  0010                     	;# 
   134  0011                     	;# 
   135  0012                     	;# 
   136  0013                     	;# 
   137  0014                     	;# 
   138  0015                     	;# 
   139  0015                     	;# 
   140  0016                     	;# 
   141  0017                     	;# 
   142  0018                     	;# 
   143  0019                     	;# 
   144  001A                     	;# 
   145  001B                     	;# 
   146  001B                     	;# 
   147  001C                     	;# 
   148  001D                     	;# 
   149  001E                     	;# 
   150  001F                     	;# 
   151  0081                     	;# 
   152  0085                     	;# 
   153  0086                     	;# 
   154  0087                     	;# 
   155  0088                     	;# 
   156  0089                     	;# 
   157  008C                     	;# 
   158  008D                     	;# 
   159  008E                     	;# 
   160  0091                     	;# 
   161  0092                     	;# 
   162  0093                     	;# 
   163  0094                     	;# 
   164  0098                     	;# 
   165  0099                     	;# 
   166  009C                     	;# 
   167  009D                     	;# 
   168  009E                     	;# 
   169  009F                     	;# 
   170  010C                     	;# 
   171  010D                     	;# 
   172  010E                     	;# 
   173  010F                     	;# 
   174  018C                     	;# 
   175  018D                     	;# 
   176  0000                     	;# 
   177  0001                     	;# 
   178  0002                     	;# 
   179  0003                     	;# 
   180  0004                     	;# 
   181  0005                     	;# 
   182  0006                     	;# 
   183  0007                     	;# 
   184  0008                     	;# 
   185  0009                     	;# 
   186  000A                     	;# 
   187  000B                     	;# 
   188  000C                     	;# 
   189  000D                     	;# 
   190  000E                     	;# 
   191  000E                     	;# 
   192  000F                     	;# 
   193  0010                     	;# 
   194  0011                     	;# 
   195  0012                     	;# 
   196  0013                     	;# 
   197  0014                     	;# 
   198  0015                     	;# 
   199  0015                     	;# 
   200  0016                     	;# 
   201  0017                     	;# 
   202  0018                     	;# 
   203  0019                     	;# 
   204  001A                     	;# 
   205  001B                     	;# 
   206  001B                     	;# 
   207  001C                     	;# 
   208  001D                     	;# 
   209  001E                     	;# 
   210  001F                     	;# 
   211  0081                     	;# 
   212  0085                     	;# 
   213  0086                     	;# 
   214  0087                     	;# 
   215  0088                     	;# 
   216  0089                     	;# 
   217  008C                     	;# 
   218  008D                     	;# 
   219  008E                     	;# 
   220  0091                     	;# 
   221  0092                     	;# 
   222  0093                     	;# 
   223  0094                     	;# 
   224  0098                     	;# 
   225  0099                     	;# 
   226  009C                     	;# 
   227  009D                     	;# 
   228  009E                     	;# 
   229  009F                     	;# 
   230  010C                     	;# 
   231  010D                     	;# 
   232  010E                     	;# 
   233  010F                     	;# 
   234  018C                     	;# 
   235  018D                     	;# 
   236  0000                     	;# 
   237  0001                     	;# 
   238  0002                     	;# 
   239  0003                     	;# 
   240  0004                     	;# 
   241  0005                     	;# 
   242  0006                     	;# 
   243  0007                     	;# 
   244  0008                     	;# 
   245  0009                     	;# 
   246  000A                     	;# 
   247  000B                     	;# 
   248  000C                     	;# 
   249  000D                     	;# 
   250  000E                     	;# 
   251  000E                     	;# 
   252  000F                     	;# 
   253  0010                     	;# 
   254  0011                     	;# 
   255  0012                     	;# 
   256  0013                     	;# 
   257  0014                     	;# 
   258  0015                     	;# 
   259  0015                     	;# 
   260  0016                     	;# 
   261  0017                     	;# 
   262  0018                     	;# 
   263  0019                     	;# 
   264  001A                     	;# 
   265  001B                     	;# 
   266  001B                     	;# 
   267  001C                     	;# 
   268  001D                     	;# 
   269  001E                     	;# 
   270  001F                     	;# 
   271  0081                     	;# 
   272  0085                     	;# 
   273  0086                     	;# 
   274  0087                     	;# 
   275  0088                     	;# 
   276  0089                     	;# 
   277  008C                     	;# 
   278  008D                     	;# 
   279  008E                     	;# 
   280  0091                     	;# 
   281  0092                     	;# 
   282  0093                     	;# 
   283  0094                     	;# 
   284  0098                     	;# 
   285  0099                     	;# 
   286  009C                     	;# 
   287  009D                     	;# 
   288  009E                     	;# 
   289  009F                     	;# 
   290  010C                     	;# 
   291  010D                     	;# 
   292  010E                     	;# 
   293  010F                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296  0000                     	;# 
   297  0001                     	;# 
   298  0002                     	;# 
   299  0003                     	;# 
   300  0004                     	;# 
   301  0005                     	;# 
   302  0006                     	;# 
   303  0007                     	;# 
   304  0008                     	;# 
   305  0009                     	;# 
   306  000A                     	;# 
   307  000B                     	;# 
   308  000C                     	;# 
   309  000D                     	;# 
   310  000E                     	;# 
   311  000E                     	;# 
   312  000F                     	;# 
   313  0010                     	;# 
   314  0011                     	;# 
   315  0012                     	;# 
   316  0013                     	;# 
   317  0014                     	;# 
   318  0015                     	;# 
   319  0015                     	;# 
   320  0016                     	;# 
   321  0017                     	;# 
   322  0018                     	;# 
   323  0019                     	;# 
   324  001A                     	;# 
   325  001B                     	;# 
   326  001B                     	;# 
   327  001C                     	;# 
   328  001D                     	;# 
   329  001E                     	;# 
   330  001F                     	;# 
   331  0081                     	;# 
   332  0085                     	;# 
   333  0086                     	;# 
   334  0087                     	;# 
   335  0088                     	;# 
   336  0089                     	;# 
   337  008C                     	;# 
   338  008D                     	;# 
   339  008E                     	;# 
   340  0091                     	;# 
   341  0092                     	;# 
   342  0093                     	;# 
   343  0094                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  009F                     	;# 
   350  010C                     	;# 
   351  010D                     	;# 
   352  010E                     	;# 
   353  010F                     	;# 
   354  018C                     	;# 
   355  018D                     	;# 
   356  0000                     	;# 
   357  0001                     	;# 
   358  0002                     	;# 
   359  0003                     	;# 
   360  0004                     	;# 
   361  0005                     	;# 
   362  0006                     	;# 
   363  0007                     	;# 
   364  0008                     	;# 
   365  0009                     	;# 
   366  000A                     	;# 
   367  000B                     	;# 
   368  000C                     	;# 
   369  000D                     	;# 
   370  000E                     	;# 
   371  000E                     	;# 
   372  000F                     	;# 
   373  0010                     	;# 
   374  0011                     	;# 
   375  0012                     	;# 
   376  0013                     	;# 
   377  0014                     	;# 
   378  0015                     	;# 
   379  0015                     	;# 
   380  0016                     	;# 
   381  0017                     	;# 
   382  0018                     	;# 
   383  0019                     	;# 
   384  001A                     	;# 
   385  001B                     	;# 
   386  001B                     	;# 
   387  001C                     	;# 
   388  001D                     	;# 
   389  001E                     	;# 
   390  001F                     	;# 
   391  0081                     	;# 
   392  0085                     	;# 
   393  0086                     	;# 
   394  0087                     	;# 
   395  0088                     	;# 
   396  0089                     	;# 
   397  008C                     	;# 
   398  008D                     	;# 
   399  008E                     	;# 
   400  0091                     	;# 
   401  0092                     	;# 
   402  0093                     	;# 
   403  0094                     	;# 
   404  0098                     	;# 
   405  0099                     	;# 
   406  009C                     	;# 
   407  009D                     	;# 
   408  009E                     	;# 
   409  009F                     	;# 
   410  010C                     	;# 
   411  010D                     	;# 
   412  010E                     	;# 
   413  010F                     	;# 
   414  018C                     	;# 
   415  018D                     	;# 
   416  001A                     _RCREG	set	26
   417  0019                     _TXREG	set	25
   418  001E                     _ADRESH	set	30
   419  001F                     _ADCON0bits	set	31
   420  001F                     _ADCON0	set	31
   421  0006                     _PORTB	set	6
   422  0013                     _SSPBUF	set	19
   423  0014                     _SSPCON	set	20
   424  0065                     _RCIF	set	101
   425  0064                     _TXIF	set	100
   426  00C6                     _RX9	set	198
   427  00C4                     _CREN	set	196
   428  00C7                     _SPEN	set	199
   429  00FA                     _GO_DONE	set	250
   430  00F8                     _ADON	set	248
   431  003F                     _RC7	set	63
   432  003D                     _RC5	set	61
   433  0063                     _SSPIF	set	99
   434  0039                     _RC1	set	57
   435  003C                     _RC4	set	60
   436  0099                     _SPBRG	set	153
   437  009E                     _ADRESL	set	158
   438  009F                     _ADCON1	set	159
   439  0094                     _SSPSTAT	set	148
   440  0093                     _SSPADD	set	147
   441  0087                     _TRISC	set	135
   442  0086                     _TRISB	set	134
   443  04C6                     _TX9	set	1222
   444  04C5                     _TXEN	set	1221
   445  04C4                     _SYNC	set	1220
   446  04C2                     _BRGH	set	1218
   447  043F                     _TRISC7	set	1087
   448  043E                     _TRISC6	set	1086
   449  048A                     _PEN	set	1162
   450  048E                     _ACKSTAT	set	1166
   451  0488                     _SEN	set	1160
   452  043C                     _TRISC4	set	1084
   453  043B                     _TRISC3	set	1083
   454                           
   455                           	psect	strings
   456  0003                     __pstrings:
   457  0003                     stringtab:
   458  0003                     __stringtab:
   459                           
   460                           ;	String table - string pointers are 1 byte each
   461  0003  1BFF               	btfsc	btemp+1,7
   462  0004  280D               	ljmp	stringcode
   463  0005  1383               	bcf	3,7
   464  0006  187F               	btfsc	btemp+1,0
   465  0007  1783               	bsf	3,7
   466  0008  0800               	movf	0,w
   467  0009  0A84               	incf	4,f
   468  000A  1903               	skipnz
   469  000B  0AFF               	incf	btemp+1,f
   470  000C  0008               	return
   471  000D                     stringcode:
   472  000D                     stringdir:
   473  000D  3000               	movlw	high stringdir
   474  000E  008A               	movwf	10
   475  000F  0804               	movf	4,w
   476  0010  0A84               	incf	4,f
   477  0011  0782               	addwf	2,f
   478  0012                     __stringbase:
   479  0012  3400               	retlw	0
   480  0013                     __end_of__stringtab:
   481  0013                     STR_1:
   482  0013  3441               	retlw	65	;'A'
   483  0014  3444               	retlw	68	;'D'
   484  0015  3443               	retlw	67	;'C'
   485  0016  343A               	retlw	58	;':'
   486  0017  3420               	retlw	32	;' '
   487  0018  3400               	retlw	0
   488                           
   489                           	psect	cinit
   490  07FC                     start_initialization:	
   491                           ; #config settings
   492                           
   493  07FC                     __initialization:
   494  07FC                     end_of_initialization:	
   495                           ;End of C runtime variable initialization code
   496                           
   497  07FC                     __end_of__initialization:
   498  07FC  0183               	clrf	3
   499  07FD  120A  118A  2F41   	ljmp	_main	;jump to C main() function
   500                           
   501                           	psect	cstackCOMMON
   502  0070                     __pcstackCOMMON:
   503  0070                     ?_ADC_init:
   504  0070                     ??_ADC_init:	
   505                           ; 1 bytes @ 0x0
   506                           
   507  0070                     ?_LCD_init:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  0070                     ?_LCD_command:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0070                     ??_LCD_command:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     ?_LCD_write_char:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0070                     ??_LCD_write_char:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ?_ADC_read:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ?_main:	
   526                           ; 2 bytes @ 0x0
   527                           
   528  0070                     ?___lwdiv:	
   529                           ; 2 bytes @ 0x0
   530                           
   531  0070                     ?___lwmod:	
   532                           ; 2 bytes @ 0x0
   533                           
   534  0070                     ___lwdiv@divisor:	
   535                           ; 2 bytes @ 0x0
   536                           
   537  0070                     ___lwmod@divisor:	
   538                           ; 2 bytes @ 0x0
   539                           
   540                           
   541                           ; 2 bytes @ 0x0
   542  0070                     	ds	2
   543  0072                     ??_ADC_read:
   544  0072                     LCD_command@cmd:	
   545                           ; 1 bytes @ 0x2
   546                           
   547  0072                     LCD_write_char@ch:	
   548                           ; 1 bytes @ 0x2
   549                           
   550  0072                     ___lwdiv@dividend:	
   551                           ; 1 bytes @ 0x2
   552                           
   553  0072                     ___lwmod@dividend:	
   554                           ; 2 bytes @ 0x2
   555                           
   556                           
   557                           ; 2 bytes @ 0x2
   558  0072                     	ds	1
   559  0073                     ??_LCD_init:
   560  0073                     ?_LCD_Write_String:	
   561                           ; 1 bytes @ 0x3
   562                           
   563  0073                     LCD_Write_String@Str:	
   564                           ; 1 bytes @ 0x3
   565                           
   566                           
   567                           ; 2 bytes @ 0x3
   568  0073                     	ds	1
   569  0074                     ??___lwdiv:
   570  0074                     ??___lwmod:	
   571                           ; 1 bytes @ 0x4
   572                           
   573  0074                     ADC_read@ADC_val:	
   574                           ; 1 bytes @ 0x4
   575                           
   576                           
   577                           ; 2 bytes @ 0x4
   578  0074                     	ds	1
   579  0075                     ??_LCD_Write_String:
   580  0075                     ___lwmod@counter:	
   581                           ; 1 bytes @ 0x5
   582                           
   583  0075                     ___lwdiv@quotient:	
   584                           ; 1 bytes @ 0x5
   585                           
   586                           
   587                           ; 2 bytes @ 0x5
   588  0075                     	ds	2
   589  0077                     ___lwdiv@counter:
   590                           
   591                           ; 1 bytes @ 0x7
   592  0077                     	ds	1
   593  0078                     ?_utoa:
   594  0078                     LCD_Write_String@i:	
   595                           ; 1 bytes @ 0x8
   596                           
   597  0078                     utoa@val:	
   598                           ; 2 bytes @ 0x8
   599                           
   600                           
   601                           ; 2 bytes @ 0x8
   602  0078                     	ds	2
   603  007A                     utoa@base:
   604                           
   605                           ; 2 bytes @ 0xA
   606  007A                     	ds	2
   607  007C                     ??_utoa:
   608                           
   609                           ; 1 bytes @ 0xC
   610  007C                     	ds	1
   611  007D                     ??_itoa:
   612                           
   613                           ; 1 bytes @ 0xD
   614  007D                     	ds	1
   615                           
   616                           	psect	cstackBANK0
   617  0020                     __pcstackBANK0:
   618  0020                     utoa@v:
   619                           
   620                           ; 2 bytes @ 0x0
   621  0020                     	ds	2
   622  0022                     utoa@c:
   623                           
   624                           ; 1 bytes @ 0x2
   625  0022                     	ds	1
   626  0023                     utoa@buf:
   627                           
   628                           ; 1 bytes @ 0x3
   629  0023                     	ds	1
   630  0024                     ?_itoa:
   631  0024                     itoa@val:	
   632                           ; 1 bytes @ 0x4
   633                           
   634                           
   635                           ; 2 bytes @ 0x4
   636  0024                     	ds	2
   637  0026                     itoa@base:
   638                           
   639                           ; 2 bytes @ 0x6
   640  0026                     	ds	3
   641  0029                     itoa@buf:
   642                           
   643                           ; 1 bytes @ 0x9
   644  0029                     	ds	1
   645  002A                     ??_main:
   646                           
   647                           ; 1 bytes @ 0xA
   648  002A                     	ds	3
   649  002D                     main@buffer:
   650                           
   651                           ; 7 bytes @ 0xD
   652  002D                     	ds	7
   653  0034                     main@outcome:
   654                           
   655                           ; 2 bytes @ 0x14
   656  0034                     	ds	2
   657                           
   658                           	psect	maintext
   659  0741                     __pmaintext:	
   660 ;;
   661 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   662 ;;
   663 ;; *************** function _main *****************
   664 ;; Defined at:
   665 ;;		line 15 in file "main.c"
   666 ;; Parameters:    Size  Location     Type
   667 ;;		None
   668 ;; Auto vars:     Size  Location     Type
   669 ;;  buffer          7   13[BANK0 ] unsigned char [7]
   670 ;;  outcome         2   20[BANK0 ] int 
   671 ;; Return value:  Size  Location     Type
   672 ;;                  2   26[None  ] int 
   673 ;; Registers used:
   674 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   675 ;; Tracked objects:
   676 ;;		On entry : B00/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   680 ;;      Params:         0       0       0       0       0
   681 ;;      Locals:         0       9       0       0       0
   682 ;;      Temps:          0       3       0       0       0
   683 ;;      Totals:         0      12       0       0       0
   684 ;;Total ram usage:       12 bytes
   685 ;; Hardware stack levels required when called:    3
   686 ;; This function calls:
   687 ;;		_ADC_init
   688 ;;		_ADC_read
   689 ;;		_LCD_Write_String
   690 ;;		_LCD_command
   691 ;;		_LCD_init
   692 ;;		_itoa
   693 ;; This function is called by:
   694 ;;		Startup code after reset
   695 ;; This function uses a non-reentrant model
   696 ;;
   697                           
   698                           
   699                           ;psect for function _main
   700  0741                     _main:
   701  0741                     l1211:	
   702                           ;incstack = 0
   703                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   704                           
   705                           
   706                           ;main.c: 19:     TRISB = 0x00;
   707  0741  1683               	bsf	3,5	;RP0=1, select bank1
   708  0742  1303               	bcf	3,6	;RP1=0, select bank1
   709  0743  0186               	clrf	6	;volatile
   710  0744                     l1213:
   711                           
   712                           ;main.c: 20:     TRISC = 0x01;
   713  0744  3001               	movlw	1
   714  0745  0087               	movwf	7	;volatile
   715  0746                     l1215:
   716                           
   717                           ;main.c: 22:     _delay((unsigned long)((1000)*(20000000/4000.0)));
   718  0746  301A               	movlw	26
   719  0747  1283               	bcf	3,5	;RP0=0, select bank0
   720  0748  1303               	bcf	3,6	;RP1=0, select bank0
   721  0749  00AC               	movwf	??_main+2
   722  074A  305E               	movlw	94
   723  074B  00AB               	movwf	??_main+1
   724  074C  306D               	movlw	109
   725  074D  00AA               	movwf	??_main
   726  074E                     u547:
   727  074E  0BAA               	decfsz	??_main,f
   728  074F  2F4E               	goto	u547
   729  0750  0BAB               	decfsz	??_main+1,f
   730  0751  2F4E               	goto	u547
   731  0752  0BAC               	decfsz	??_main+2,f
   732  0753  2F4E               	goto	u547
   733  0754  2F55               	nop2
   734  0755                     l1217:
   735                           
   736                           ;main.c: 23:     RC4 = 0;
   737  0755  1283               	bcf	3,5	;RP0=0, select bank0
   738  0756  1303               	bcf	3,6	;RP1=0, select bank0
   739  0757  1207               	bcf	7,4	;volatile
   740  0758                     l1219:
   741                           
   742                           ;main.c: 24:     _delay((unsigned long)((1000)*(20000000/4000.0)));
   743  0758  301A               	movlw	26
   744  0759  1283               	bcf	3,5	;RP0=0, select bank0
   745  075A  1303               	bcf	3,6	;RP1=0, select bank0
   746  075B  00AC               	movwf	??_main+2
   747  075C  305E               	movlw	94
   748  075D  00AB               	movwf	??_main+1
   749  075E  306D               	movlw	109
   750  075F  00AA               	movwf	??_main
   751  0760                     u557:
   752  0760  0BAA               	decfsz	??_main,f
   753  0761  2F60               	goto	u557
   754  0762  0BAB               	decfsz	??_main+1,f
   755  0763  2F60               	goto	u557
   756  0764  0BAC               	decfsz	??_main+2,f
   757  0765  2F60               	goto	u557
   758  0766  2F67               	nop2
   759  0767                     l1221:
   760                           
   761                           ;main.c: 25:     RC4 = 1;
   762  0767  1283               	bcf	3,5	;RP0=0, select bank0
   763  0768  1303               	bcf	3,6	;RP1=0, select bank0
   764  0769  1607               	bsf	7,4	;volatile
   765  076A                     l1223:
   766                           
   767                           ;main.c: 26:     _delay((unsigned long)((1000)*(20000000/4000.0)));
   768  076A  301A               	movlw	26
   769  076B  1283               	bcf	3,5	;RP0=0, select bank0
   770  076C  1303               	bcf	3,6	;RP1=0, select bank0
   771  076D  00AC               	movwf	??_main+2
   772  076E  305E               	movlw	94
   773  076F  00AB               	movwf	??_main+1
   774  0770  306D               	movlw	109
   775  0771  00AA               	movwf	??_main
   776  0772                     u567:
   777  0772  0BAA               	decfsz	??_main,f
   778  0773  2F72               	goto	u567
   779  0774  0BAB               	decfsz	??_main+1,f
   780  0775  2F72               	goto	u567
   781  0776  0BAC               	decfsz	??_main+2,f
   782  0777  2F72               	goto	u567
   783  0778  2F79               	nop2
   784  0779                     l1225:
   785                           
   786                           ;main.c: 27:     RC4 = 0;
   787  0779  1283               	bcf	3,5	;RP0=0, select bank0
   788  077A  1303               	bcf	3,6	;RP1=0, select bank0
   789  077B  1207               	bcf	7,4	;volatile
   790  077C                     l1227:
   791                           
   792                           ;main.c: 28:     _delay((unsigned long)((1000)*(20000000/4000.0)));
   793  077C  301A               	movlw	26
   794  077D  1283               	bcf	3,5	;RP0=0, select bank0
   795  077E  1303               	bcf	3,6	;RP1=0, select bank0
   796  077F  00AC               	movwf	??_main+2
   797  0780  305E               	movlw	94
   798  0781  00AB               	movwf	??_main+1
   799  0782  306D               	movlw	109
   800  0783  00AA               	movwf	??_main
   801  0784                     u577:
   802  0784  0BAA               	decfsz	??_main,f
   803  0785  2F84               	goto	u577
   804  0786  0BAB               	decfsz	??_main+1,f
   805  0787  2F84               	goto	u577
   806  0788  0BAC               	decfsz	??_main+2,f
   807  0789  2F84               	goto	u577
   808  078A  2F8B               	nop2
   809  078B                     l1229:
   810                           
   811                           ;main.c: 29:     RC4 = 1;
   812  078B  1283               	bcf	3,5	;RP0=0, select bank0
   813  078C  1303               	bcf	3,6	;RP1=0, select bank0
   814  078D  1607               	bsf	7,4	;volatile
   815  078E                     l1231:
   816                           
   817                           ;main.c: 30:     _delay((unsigned long)((1000)*(20000000/4000.0)));
   818  078E  301A               	movlw	26
   819  078F  1283               	bcf	3,5	;RP0=0, select bank0
   820  0790  1303               	bcf	3,6	;RP1=0, select bank0
   821  0791  00AC               	movwf	??_main+2
   822  0792  305E               	movlw	94
   823  0793  00AB               	movwf	??_main+1
   824  0794  306D               	movlw	109
   825  0795  00AA               	movwf	??_main
   826  0796                     u587:
   827  0796  0BAA               	decfsz	??_main,f
   828  0797  2F96               	goto	u587
   829  0798  0BAB               	decfsz	??_main+1,f
   830  0799  2F96               	goto	u587
   831  079A  0BAC               	decfsz	??_main+2,f
   832  079B  2F96               	goto	u587
   833  079C  2F9D               	nop2
   834  079D                     l1233:
   835                           
   836                           ;main.c: 31:     RC4 = 0;
   837  079D  1283               	bcf	3,5	;RP0=0, select bank0
   838  079E  1303               	bcf	3,6	;RP1=0, select bank0
   839  079F  1207               	bcf	7,4	;volatile
   840  07A0                     l1235:
   841                           
   842                           ;main.c: 32:     _delay((unsigned long)((1000)*(20000000/4000.0)));
   843  07A0  301A               	movlw	26
   844  07A1  1283               	bcf	3,5	;RP0=0, select bank0
   845  07A2  1303               	bcf	3,6	;RP1=0, select bank0
   846  07A3  00AC               	movwf	??_main+2
   847  07A4  305E               	movlw	94
   848  07A5  00AB               	movwf	??_main+1
   849  07A6  306D               	movlw	109
   850  07A7  00AA               	movwf	??_main
   851  07A8                     u597:
   852  07A8  0BAA               	decfsz	??_main,f
   853  07A9  2FA8               	goto	u597
   854  07AA  0BAB               	decfsz	??_main+1,f
   855  07AB  2FA8               	goto	u597
   856  07AC  0BAC               	decfsz	??_main+2,f
   857  07AD  2FA8               	goto	u597
   858  07AE  2FAF               	nop2
   859  07AF                     l1237:
   860                           
   861                           ;main.c: 34:     ADC_init();
   862  07AF  120A  118A  2576  120A  118A  	fcall	_ADC_init
   863  07B4                     l1239:
   864                           
   865                           ;main.c: 38:     LCD_init();
   866  07B4  120A  118A  25E7  120A  118A  	fcall	_LCD_init
   867  07B9                     l1241:
   868  07B9                     l1243:
   869                           
   870                           ;main.c: 47:     {;main.c: 48:         outcome = ADC_read();
   871  07B9  120A  118A  25A6  120A  118A  	fcall	_ADC_read
   872  07BE  0871               	movf	?_ADC_read+1,w
   873  07BF  1283               	bcf	3,5	;RP0=0, select bank0
   874  07C0  1303               	bcf	3,6	;RP1=0, select bank0
   875  07C1  00B5               	movwf	main@outcome+1
   876  07C2  0870               	movf	?_ADC_read,w
   877  07C3  00B4               	movwf	main@outcome
   878  07C4                     l1245:
   879                           
   880                           ;main.c: 50:         itoa(buffer,outcome,10);
   881  07C4  0835               	movf	main@outcome+1,w
   882  07C5  00A5               	movwf	itoa@val+1
   883  07C6  0834               	movf	main@outcome,w
   884  07C7  00A4               	movwf	itoa@val
   885  07C8  300A               	movlw	10
   886  07C9  00A6               	movwf	itoa@base
   887  07CA  3000               	movlw	0
   888  07CB  00A7               	movwf	itoa@base+1
   889  07CC  302D               	movlw	(low (main@buffer| 0))& (0+255)
   890  07CD  120A  118A  25C1  120A  118A  	fcall	_itoa
   891  07D2                     l1247:
   892                           
   893                           ;main.c: 51:         LCD_Write_String("ADC: ");
   894  07D2  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   895  07D3  00F3               	movwf	LCD_Write_String@Str
   896  07D4  3080               	movlw	128
   897  07D5  00F4               	movwf	LCD_Write_String@Str+1
   898  07D6  120A  118A  2649  120A  118A  	fcall	_LCD_Write_String
   899  07DB                     l1249:
   900                           
   901                           ;main.c: 52:         LCD_Write_String(buffer);
   902  07DB  302D               	movlw	(low (main@buffer| 0))& (0+255)
   903  07DC  00F3               	movwf	LCD_Write_String@Str
   904  07DD  3000               	movlw	0
   905  07DE  00F4               	movwf	LCD_Write_String@Str+1
   906  07DF  120A  118A  2649  120A  118A  	fcall	_LCD_Write_String
   907  07E4                     l1251:
   908                           
   909                           ;main.c: 54:         if(RC1 == 1)
   910  07E4  1283               	bcf	3,5	;RP0=0, select bank0
   911  07E5  1303               	bcf	3,6	;RP1=0, select bank0
   912  07E6  1C87               	btfss	7,1	;volatile
   913  07E7  2FE9               	goto	u511
   914  07E8  2FEA               	goto	u510
   915  07E9                     u511:
   916  07E9  2FF2               	goto	l1255
   917  07EA                     u510:
   918  07EA                     l29:
   919  07EA  1887               	btfsc	7,1	;volatile
   920  07EB  2FED               	goto	u521
   921  07EC  2FEE               	goto	u520
   922  07ED                     u521:
   923  07ED  2FEA               	goto	l29
   924  07EE                     u520:
   925  07EE                     l32:
   926  07EE  1C87               	btfss	7,1	;volatile
   927  07EF  2FF1               	goto	u531
   928  07F0  2FF2               	goto	u530
   929  07F1                     u531:
   930  07F1  2FEE               	goto	l32
   931  07F2                     u530:
   932  07F2                     l1255:
   933                           
   934                           ;main.c: 60:         LCD_command(0x02);
   935  07F2  3002               	movlw	2
   936  07F3  120A  118A  2592  120A  118A  	fcall	_LCD_command
   937  07F8  2FB9               	goto	l1243
   938  07F9  120A  118A  2800   	ljmp	start
   939  07FC                     __end_of_main:
   940                           
   941                           	psect	text1
   942  05C1                     __ptext1:	
   943 ;; *************** function _itoa *****************
   944 ;; Defined at:
   945 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\itoa.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;  buf             1    wreg     PTR unsigned char 
   948 ;;		 -> main@buffer(7), 
   949 ;;  val             2    4[BANK0 ] int 
   950 ;;  base            2    6[BANK0 ] int 
   951 ;; Auto vars:     Size  Location     Type
   952 ;;  buf             1    9[BANK0 ] PTR unsigned char 
   953 ;;		 -> main@buffer(7), 
   954 ;;  cp              1    0        PTR unsigned char 
   955 ;;		 -> main@buffer(7), 
   956 ;; Return value:  Size  Location     Type
   957 ;;                  1    wreg      PTR unsigned char 
   958 ;; Registers used:
   959 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   960 ;; Tracked objects:
   961 ;;		On entry : 0/0
   962 ;;		On exit  : 0/0
   963 ;;		Unchanged: 0/0
   964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   965 ;;      Params:         0       4       0       0       0
   966 ;;      Locals:         0       2       0       0       0
   967 ;;      Temps:          1       0       0       0       0
   968 ;;      Totals:         1       6       0       0       0
   969 ;;Total ram usage:        7 bytes
   970 ;; Hardware stack levels used:    1
   971 ;; Hardware stack levels required when called:    2
   972 ;; This function calls:
   973 ;;		_utoa
   974 ;; This function is called by:
   975 ;;		_main
   976 ;; This function uses a non-reentrant model
   977 ;;
   978                           
   979                           
   980                           ;psect for function _itoa
   981  05C1                     _itoa:
   982                           
   983                           ;incstack = 0
   984                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   985                           ;itoa@buf stored from wreg
   986  05C1  1283               	bcf	3,5	;RP0=0, select bank0
   987  05C2  1303               	bcf	3,6	;RP1=0, select bank0
   988  05C3  00A9               	movwf	itoa@buf
   989  05C4                     l1189:
   990  05C4                     l1191:
   991  05C4  1FA5               	btfss	itoa@val+1,7
   992  05C5  2DC7               	goto	u471
   993  05C6  2DC8               	goto	u470
   994  05C7                     u471:
   995  05C7  2DD8               	goto	l1199
   996  05C8                     u470:
   997  05C8                     l1193:
   998  05C8  302D               	movlw	45
   999  05C9  00FD               	movwf	??_itoa
  1000  05CA  0829               	movf	itoa@buf,w
  1001  05CB  0084               	movwf	4
  1002  05CC  087D               	movf	??_itoa,w
  1003  05CD  1383               	bcf	3,7	;select IRP bank0
  1004  05CE  0080               	movwf	0
  1005  05CF                     l1195:
  1006  05CF  3001               	movlw	1
  1007  05D0  00FD               	movwf	??_itoa
  1008  05D1  087D               	movf	??_itoa,w
  1009  05D2  07A9               	addwf	itoa@buf,f
  1010  05D3                     l1197:
  1011  05D3  09A4               	comf	itoa@val,f
  1012  05D4  09A5               	comf	itoa@val+1,f
  1013  05D5  0AA4               	incf	itoa@val,f
  1014  05D6  1903               	skipnz
  1015  05D7  0AA5               	incf	itoa@val+1,f
  1016  05D8                     l1199:
  1017  05D8  0825               	movf	itoa@val+1,w
  1018  05D9  00F9               	movwf	utoa@val+1
  1019  05DA  0824               	movf	itoa@val,w
  1020  05DB  00F8               	movwf	utoa@val
  1021  05DC  0827               	movf	itoa@base+1,w
  1022  05DD  00FB               	movwf	utoa@base+1
  1023  05DE  0826               	movf	itoa@base,w
  1024  05DF  00FA               	movwf	utoa@base
  1025  05E0  0829               	movf	itoa@buf,w
  1026  05E1  120A  118A  26CF  120A  118A  	fcall	_utoa
  1027  05E6                     l735:
  1028  05E6  0008               	return
  1029  05E7                     __end_of_itoa:
  1030                           
  1031                           	psect	text2
  1032  06CF                     __ptext2:	
  1033 ;; *************** function _utoa *****************
  1034 ;; Defined at:
  1035 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\itoa.c"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;  buf             1    wreg     PTR unsigned char 
  1038 ;;		 -> main@buffer(7), 
  1039 ;;  val             2    8[COMMON] unsigned int 
  1040 ;;  base            2   10[COMMON] int 
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  1043 ;;		 -> main@buffer(7), 
  1044 ;;  v               2    0[BANK0 ] unsigned int 
  1045 ;;  c               1    2[BANK0 ] unsigned char 
  1046 ;; Return value:  Size  Location     Type
  1047 ;;                  1    wreg      PTR unsigned char 
  1048 ;; Registers used:
  1049 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1050 ;; Tracked objects:
  1051 ;;		On entry : 0/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1055 ;;      Params:         4       0       0       0       0
  1056 ;;      Locals:         0       4       0       0       0
  1057 ;;      Temps:          1       0       0       0       0
  1058 ;;      Totals:         5       4       0       0       0
  1059 ;;Total ram usage:        9 bytes
  1060 ;; Hardware stack levels used:    1
  1061 ;; Hardware stack levels required when called:    1
  1062 ;; This function calls:
  1063 ;;		___lwdiv
  1064 ;;		___lwmod
  1065 ;; This function is called by:
  1066 ;;		_itoa
  1067 ;; This function uses a non-reentrant model
  1068 ;;
  1069                           
  1070                           
  1071                           ;psect for function _utoa
  1072  06CF                     _utoa:
  1073                           
  1074                           ;incstack = 0
  1075                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1076                           ;utoa@buf stored from wreg
  1077  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  1078  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  1079  06D1  00A3               	movwf	utoa@buf
  1080  06D2                     l1129:
  1081  06D2  0879               	movf	utoa@val+1,w
  1082  06D3  00A1               	movwf	utoa@v+1
  1083  06D4  0878               	movf	utoa@val,w
  1084  06D5  00A0               	movwf	utoa@v
  1085  06D6                     l1131:
  1086  06D6  087B               	movf	utoa@base+1,w
  1087  06D7  00F1               	movwf	___lwdiv@divisor+1
  1088  06D8  087A               	movf	utoa@base,w
  1089  06D9  00F0               	movwf	___lwdiv@divisor
  1090  06DA  0821               	movf	utoa@v+1,w
  1091  06DB  00F3               	movwf	___lwdiv@dividend+1
  1092  06DC  0820               	movf	utoa@v,w
  1093  06DD  00F2               	movwf	___lwdiv@dividend
  1094  06DE  120A  118A  268B  120A  118A  	fcall	___lwdiv
  1095  06E3  0871               	movf	?___lwdiv+1,w
  1096  06E4  1283               	bcf	3,5	;RP0=0, select bank0
  1097  06E5  1303               	bcf	3,6	;RP1=0, select bank0
  1098  06E6  00A1               	movwf	utoa@v+1
  1099  06E7  0870               	movf	?___lwdiv,w
  1100  06E8  00A0               	movwf	utoa@v
  1101  06E9                     l1133:
  1102  06E9  3001               	movlw	1
  1103  06EA  00FC               	movwf	??_utoa
  1104  06EB  087C               	movf	??_utoa,w
  1105  06EC  07A3               	addwf	utoa@buf,f
  1106  06ED                     l1135:
  1107  06ED  0820               	movf	utoa@v,w
  1108  06EE  0421               	iorwf	utoa@v+1,w
  1109  06EF  1D03               	btfss	3,2
  1110  06F0  2EF2               	goto	u441
  1111  06F1  2EF3               	goto	u440
  1112  06F2                     u441:
  1113  06F2  2ED6               	goto	l1131
  1114  06F3                     u440:
  1115  06F3                     l1137:
  1116  06F3  0823               	movf	utoa@buf,w
  1117  06F4  0084               	movwf	4
  1118  06F5  1383               	bcf	3,7	;select IRP bank0
  1119  06F6  0180               	clrf	0
  1120  06F7                     l1139:
  1121  06F7  3001               	movlw	1
  1122  06F8  02A3               	subwf	utoa@buf,f
  1123  06F9                     l1141:
  1124  06F9  087B               	movf	utoa@base+1,w
  1125  06FA  00F1               	movwf	___lwmod@divisor+1
  1126  06FB  087A               	movf	utoa@base,w
  1127  06FC  00F0               	movwf	___lwmod@divisor
  1128  06FD  0879               	movf	utoa@val+1,w
  1129  06FE  00F3               	movwf	___lwmod@dividend+1
  1130  06FF  0878               	movf	utoa@val,w
  1131  0700  00F2               	movwf	___lwmod@dividend
  1132  0701  120A  118A  260F  120A  118A  	fcall	___lwmod
  1133  0706  0870               	movf	?___lwmod,w
  1134  0707  00FC               	movwf	??_utoa
  1135  0708  087C               	movf	??_utoa,w
  1136  0709  1283               	bcf	3,5	;RP0=0, select bank0
  1137  070A  1303               	bcf	3,6	;RP1=0, select bank0
  1138  070B  00A2               	movwf	utoa@c
  1139  070C                     l1143:
  1140  070C  087B               	movf	utoa@base+1,w
  1141  070D  00F1               	movwf	___lwdiv@divisor+1
  1142  070E  087A               	movf	utoa@base,w
  1143  070F  00F0               	movwf	___lwdiv@divisor
  1144  0710  0879               	movf	utoa@val+1,w
  1145  0711  00F3               	movwf	___lwdiv@dividend+1
  1146  0712  0878               	movf	utoa@val,w
  1147  0713  00F2               	movwf	___lwdiv@dividend
  1148  0714  120A  118A  268B  120A  118A  	fcall	___lwdiv
  1149  0719  0871               	movf	?___lwdiv+1,w
  1150  071A  00F9               	movwf	utoa@val+1
  1151  071B  0870               	movf	?___lwdiv,w
  1152  071C  00F8               	movwf	utoa@val
  1153  071D                     l1145:
  1154  071D  300A               	movlw	10
  1155  071E  1283               	bcf	3,5	;RP0=0, select bank0
  1156  071F  1303               	bcf	3,6	;RP1=0, select bank0
  1157  0720  0222               	subwf	utoa@c,w
  1158  0721  1C03               	skipc
  1159  0722  2F24               	goto	u451
  1160  0723  2F25               	goto	u450
  1161  0724                     u451:
  1162  0724  2F29               	goto	l741
  1163  0725                     u450:
  1164  0725                     l1147:
  1165  0725  3007               	movlw	7
  1166  0726  00FC               	movwf	??_utoa
  1167  0727  087C               	movf	??_utoa,w
  1168  0728  07A2               	addwf	utoa@c,f
  1169  0729                     l741:
  1170  0729  3030               	movlw	48
  1171  072A  00FC               	movwf	??_utoa
  1172  072B  087C               	movf	??_utoa,w
  1173  072C  07A2               	addwf	utoa@c,f
  1174  072D                     l1149:
  1175  072D  0822               	movf	utoa@c,w
  1176  072E  00FC               	movwf	??_utoa
  1177  072F  0823               	movf	utoa@buf,w
  1178  0730  0084               	movwf	4
  1179  0731  087C               	movf	??_utoa,w
  1180  0732  1383               	bcf	3,7	;select IRP bank0
  1181  0733  0080               	movwf	0
  1182  0734                     l1151:
  1183  0734  3001               	movlw	1
  1184  0735  02A3               	subwf	utoa@buf,f
  1185  0736                     l1153:
  1186  0736  0878               	movf	utoa@val,w
  1187  0737  0479               	iorwf	utoa@val+1,w
  1188  0738  1D03               	btfss	3,2
  1189  0739  2F3B               	goto	u461
  1190  073A  2F3C               	goto	u460
  1191  073B                     u461:
  1192  073B  2EF9               	goto	l1141
  1193  073C                     u460:
  1194  073C                     l1155:
  1195                           
  1196                           ;	Return value of _utoa is never used
  1197  073C  3001               	movlw	1
  1198  073D  00FC               	movwf	??_utoa
  1199  073E  087C               	movf	??_utoa,w
  1200  073F  07A3               	addwf	utoa@buf,f
  1201  0740                     l743:
  1202  0740  0008               	return
  1203  0741                     __end_of_utoa:
  1204                           
  1205                           	psect	text3
  1206  060F                     __ptext3:	
  1207 ;; *************** function ___lwmod *****************
  1208 ;; Defined at:
  1209 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;  divisor         2    0[COMMON] unsigned int 
  1212 ;;  dividend        2    2[COMMON] unsigned int 
  1213 ;; Auto vars:     Size  Location     Type
  1214 ;;  counter         1    5[COMMON] unsigned char 
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  2    0[COMMON] unsigned int 
  1217 ;; Registers used:
  1218 ;;		wreg, status,2, status,0
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1224 ;;      Params:         4       0       0       0       0
  1225 ;;      Locals:         1       0       0       0       0
  1226 ;;      Temps:          1       0       0       0       0
  1227 ;;      Totals:         6       0       0       0       0
  1228 ;;Total ram usage:        6 bytes
  1229 ;; Hardware stack levels used:    1
  1230 ;; This function calls:
  1231 ;;		Nothing
  1232 ;; This function is called by:
  1233 ;;		_utoa
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237                           
  1238                           ;psect for function ___lwmod
  1239  060F                     ___lwmod:
  1240  060F                     l1091:	
  1241                           ;incstack = 0
  1242                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1243                           
  1244  060F  0870               	movf	___lwmod@divisor,w
  1245  0610  0471               	iorwf	___lwmod@divisor+1,w
  1246  0611  1903               	btfsc	3,2
  1247  0612  2E14               	goto	u381
  1248  0613  2E15               	goto	u380
  1249  0614                     u381:
  1250  0614  2E44               	goto	l1109
  1251  0615                     u380:
  1252  0615                     l1093:
  1253  0615  01F5               	clrf	___lwmod@counter
  1254  0616  0AF5               	incf	___lwmod@counter,f
  1255  0617  2E23               	goto	l1099
  1256  0618                     l1095:
  1257  0618  3001               	movlw	1
  1258  0619                     u395:
  1259  0619  1003               	clrc
  1260  061A  0DF0               	rlf	___lwmod@divisor,f
  1261  061B  0DF1               	rlf	___lwmod@divisor+1,f
  1262  061C  3EFF               	addlw	-1
  1263  061D  1D03               	skipz
  1264  061E  2E19               	goto	u395
  1265  061F                     l1097:
  1266  061F  3001               	movlw	1
  1267  0620  00F4               	movwf	??___lwmod
  1268  0621  0874               	movf	??___lwmod,w
  1269  0622  07F5               	addwf	___lwmod@counter,f
  1270  0623                     l1099:
  1271  0623  1FF1               	btfss	___lwmod@divisor+1,7
  1272  0624  2E26               	goto	u401
  1273  0625  2E27               	goto	u400
  1274  0626                     u401:
  1275  0626  2E18               	goto	l1095
  1276  0627                     u400:
  1277  0627                     l1101:
  1278  0627  0871               	movf	___lwmod@divisor+1,w
  1279  0628  0273               	subwf	___lwmod@dividend+1,w
  1280  0629  1D03               	skipz
  1281  062A  2E2D               	goto	u415
  1282  062B  0870               	movf	___lwmod@divisor,w
  1283  062C  0272               	subwf	___lwmod@dividend,w
  1284  062D                     u415:
  1285  062D  1C03               	skipc
  1286  062E  2E30               	goto	u411
  1287  062F  2E31               	goto	u410
  1288  0630                     u411:
  1289  0630  2E37               	goto	l1105
  1290  0631                     u410:
  1291  0631                     l1103:
  1292  0631  0870               	movf	___lwmod@divisor,w
  1293  0632  02F2               	subwf	___lwmod@dividend,f
  1294  0633  0871               	movf	___lwmod@divisor+1,w
  1295  0634  1C03               	skipc
  1296  0635  03F3               	decf	___lwmod@dividend+1,f
  1297  0636  02F3               	subwf	___lwmod@dividend+1,f
  1298  0637                     l1105:
  1299  0637  3001               	movlw	1
  1300  0638                     u425:
  1301  0638  1003               	clrc
  1302  0639  0CF1               	rrf	___lwmod@divisor+1,f
  1303  063A  0CF0               	rrf	___lwmod@divisor,f
  1304  063B  3EFF               	addlw	-1
  1305  063C  1D03               	skipz
  1306  063D  2E38               	goto	u425
  1307  063E                     l1107:
  1308  063E  3001               	movlw	1
  1309  063F  02F5               	subwf	___lwmod@counter,f
  1310  0640  1D03               	btfss	3,2
  1311  0641  2E43               	goto	u431
  1312  0642  2E44               	goto	u430
  1313  0643                     u431:
  1314  0643  2E27               	goto	l1101
  1315  0644                     u430:
  1316  0644                     l1109:
  1317  0644  0873               	movf	___lwmod@dividend+1,w
  1318  0645  00F1               	movwf	?___lwmod+1
  1319  0646  0872               	movf	___lwmod@dividend,w
  1320  0647  00F0               	movwf	?___lwmod
  1321  0648                     l563:
  1322  0648  0008               	return
  1323  0649                     __end_of___lwmod:
  1324                           
  1325                           	psect	text4
  1326  068B                     __ptext4:	
  1327 ;; *************** function ___lwdiv *****************
  1328 ;; Defined at:
  1329 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
  1330 ;; Parameters:    Size  Location     Type
  1331 ;;  divisor         2    0[COMMON] unsigned int 
  1332 ;;  dividend        2    2[COMMON] unsigned int 
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;  quotient        2    5[COMMON] unsigned int 
  1335 ;;  counter         1    7[COMMON] unsigned char 
  1336 ;; Return value:  Size  Location     Type
  1337 ;;                  2    0[COMMON] unsigned int 
  1338 ;; Registers used:
  1339 ;;		wreg, status,2, status,0
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1345 ;;      Params:         4       0       0       0       0
  1346 ;;      Locals:         3       0       0       0       0
  1347 ;;      Temps:          1       0       0       0       0
  1348 ;;      Totals:         8       0       0       0       0
  1349 ;;Total ram usage:        8 bytes
  1350 ;; Hardware stack levels used:    1
  1351 ;; This function calls:
  1352 ;;		Nothing
  1353 ;; This function is called by:
  1354 ;;		_utoa
  1355 ;; This function uses a non-reentrant model
  1356 ;;
  1357                           
  1358                           
  1359                           ;psect for function ___lwdiv
  1360  068B                     ___lwdiv:
  1361  068B                     l1065:	
  1362                           ;incstack = 0
  1363                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1364                           
  1365  068B  01F5               	clrf	___lwdiv@quotient
  1366  068C  01F6               	clrf	___lwdiv@quotient+1
  1367  068D                     l1067:
  1368  068D  0870               	movf	___lwdiv@divisor,w
  1369  068E  0471               	iorwf	___lwdiv@divisor+1,w
  1370  068F  1903               	btfsc	3,2
  1371  0690  2E92               	goto	u311
  1372  0691  2E93               	goto	u310
  1373  0692                     u311:
  1374  0692  2ECA               	goto	l1087
  1375  0693                     u310:
  1376  0693                     l1069:
  1377  0693  01F7               	clrf	___lwdiv@counter
  1378  0694  0AF7               	incf	___lwdiv@counter,f
  1379  0695  2EA1               	goto	l1075
  1380  0696                     l1071:
  1381  0696  3001               	movlw	1
  1382  0697                     u325:
  1383  0697  1003               	clrc
  1384  0698  0DF0               	rlf	___lwdiv@divisor,f
  1385  0699  0DF1               	rlf	___lwdiv@divisor+1,f
  1386  069A  3EFF               	addlw	-1
  1387  069B  1D03               	skipz
  1388  069C  2E97               	goto	u325
  1389  069D                     l1073:
  1390  069D  3001               	movlw	1
  1391  069E  00F4               	movwf	??___lwdiv
  1392  069F  0874               	movf	??___lwdiv,w
  1393  06A0  07F7               	addwf	___lwdiv@counter,f
  1394  06A1                     l1075:
  1395  06A1  1FF1               	btfss	___lwdiv@divisor+1,7
  1396  06A2  2EA4               	goto	u331
  1397  06A3  2EA5               	goto	u330
  1398  06A4                     u331:
  1399  06A4  2E96               	goto	l1071
  1400  06A5                     u330:
  1401  06A5                     l1077:
  1402  06A5  3001               	movlw	1
  1403  06A6                     u345:
  1404  06A6  1003               	clrc
  1405  06A7  0DF5               	rlf	___lwdiv@quotient,f
  1406  06A8  0DF6               	rlf	___lwdiv@quotient+1,f
  1407  06A9  3EFF               	addlw	-1
  1408  06AA  1D03               	skipz
  1409  06AB  2EA6               	goto	u345
  1410  06AC  0871               	movf	___lwdiv@divisor+1,w
  1411  06AD  0273               	subwf	___lwdiv@dividend+1,w
  1412  06AE  1D03               	skipz
  1413  06AF  2EB2               	goto	u355
  1414  06B0  0870               	movf	___lwdiv@divisor,w
  1415  06B1  0272               	subwf	___lwdiv@dividend,w
  1416  06B2                     u355:
  1417  06B2  1C03               	skipc
  1418  06B3  2EB5               	goto	u351
  1419  06B4  2EB6               	goto	u350
  1420  06B5                     u351:
  1421  06B5  2EBD               	goto	l1083
  1422  06B6                     u350:
  1423  06B6                     l1079:
  1424  06B6  0870               	movf	___lwdiv@divisor,w
  1425  06B7  02F2               	subwf	___lwdiv@dividend,f
  1426  06B8  0871               	movf	___lwdiv@divisor+1,w
  1427  06B9  1C03               	skipc
  1428  06BA  03F3               	decf	___lwdiv@dividend+1,f
  1429  06BB  02F3               	subwf	___lwdiv@dividend+1,f
  1430  06BC                     l1081:
  1431  06BC  1475               	bsf	___lwdiv@quotient,0
  1432  06BD                     l1083:
  1433  06BD  3001               	movlw	1
  1434  06BE                     u365:
  1435  06BE  1003               	clrc
  1436  06BF  0CF1               	rrf	___lwdiv@divisor+1,f
  1437  06C0  0CF0               	rrf	___lwdiv@divisor,f
  1438  06C1  3EFF               	addlw	-1
  1439  06C2  1D03               	skipz
  1440  06C3  2EBE               	goto	u365
  1441  06C4                     l1085:
  1442  06C4  3001               	movlw	1
  1443  06C5  02F7               	subwf	___lwdiv@counter,f
  1444  06C6  1D03               	btfss	3,2
  1445  06C7  2EC9               	goto	u371
  1446  06C8  2ECA               	goto	u370
  1447  06C9                     u371:
  1448  06C9  2EA5               	goto	l1077
  1449  06CA                     u370:
  1450  06CA                     l1087:
  1451  06CA  0876               	movf	___lwdiv@quotient+1,w
  1452  06CB  00F1               	movwf	?___lwdiv+1
  1453  06CC  0875               	movf	___lwdiv@quotient,w
  1454  06CD  00F0               	movwf	?___lwdiv
  1455  06CE                     l553:
  1456  06CE  0008               	return
  1457  06CF                     __end_of___lwdiv:
  1458                           
  1459                           	psect	text5
  1460  05E7                     __ptext5:	
  1461 ;; *************** function _LCD_init *****************
  1462 ;; Defined at:
  1463 ;;		line 53 in file "LCD.c"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;		None
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;		None
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  1    wreg      void 
  1470 ;; Registers used:
  1471 ;;		wreg, status,2, status,0, pclath, cstack
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1477 ;;      Params:         0       0       0       0       0
  1478 ;;      Locals:         0       0       0       0       0
  1479 ;;      Temps:          2       0       0       0       0
  1480 ;;      Totals:         2       0       0       0       0
  1481 ;;Total ram usage:        2 bytes
  1482 ;; Hardware stack levels used:    1
  1483 ;; Hardware stack levels required when called:    1
  1484 ;; This function calls:
  1485 ;;		_LCD_command
  1486 ;; This function is called by:
  1487 ;;		_main
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491                           
  1492                           ;psect for function _LCD_init
  1493  05E7                     _LCD_init:
  1494  05E7                     l1163:	
  1495                           ;incstack = 0
  1496                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  1497                           
  1498                           
  1499                           ;LCD.c: 56:   _delay((unsigned long)((20)*(20000000/4000.0)));
  1500  05E7  3082               	movlw	130
  1501  05E8  00F4               	movwf	??_LCD_init+1
  1502  05E9  30DD               	movlw	221
  1503  05EA  00F3               	movwf	??_LCD_init
  1504  05EB                     u607:
  1505  05EB  0BF3               	decfsz	??_LCD_init,f
  1506  05EC  2DEB               	goto	u607
  1507  05ED  0BF4               	decfsz	??_LCD_init+1,f
  1508  05EE  2DEB               	goto	u607
  1509  05EF  2DF0               	nop2
  1510  05F0                     l1165:
  1511                           
  1512                           ;LCD.c: 57:   LCD_command(0x38);
  1513  05F0  3038               	movlw	56
  1514  05F1  120A  118A  2592  120A  118A  	fcall	_LCD_command
  1515  05F6                     l1167:
  1516                           
  1517                           ;LCD.c: 58:   LCD_command(0x0C);
  1518  05F6  300C               	movlw	12
  1519  05F7  120A  118A  2592  120A  118A  	fcall	_LCD_command
  1520  05FC                     l1169:
  1521                           
  1522                           ;LCD.c: 59:   LCD_command(0x06);
  1523  05FC  3006               	movlw	6
  1524  05FD  120A  118A  2592  120A  118A  	fcall	_LCD_command
  1525  0602                     l1171:
  1526                           
  1527                           ;LCD.c: 60:   LCD_command(0x01);
  1528  0602  3001               	movlw	1
  1529  0603  120A  118A  2592  120A  118A  	fcall	_LCD_command
  1530  0608                     l1173:
  1531                           
  1532                           ;LCD.c: 61:   LCD_command(0x80);
  1533  0608  3080               	movlw	128
  1534  0609  120A  118A  2592  120A  118A  	fcall	_LCD_command
  1535  060E                     l118:
  1536  060E  0008               	return
  1537  060F                     __end_of_LCD_init:
  1538                           
  1539                           	psect	text6
  1540  0592                     __ptext6:	
  1541 ;; *************** function _LCD_command *****************
  1542 ;; Defined at:
  1543 ;;		line 35 in file "LCD.c"
  1544 ;; Parameters:    Size  Location     Type
  1545 ;;  cmd             1    wreg     unsigned char 
  1546 ;; Auto vars:     Size  Location     Type
  1547 ;;  cmd             1    2[COMMON] unsigned char 
  1548 ;; Return value:  Size  Location     Type
  1549 ;;                  1    wreg      void 
  1550 ;; Registers used:
  1551 ;;		wreg
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1557 ;;      Params:         0       0       0       0       0
  1558 ;;      Locals:         1       0       0       0       0
  1559 ;;      Temps:          2       0       0       0       0
  1560 ;;      Totals:         3       0       0       0       0
  1561 ;;Total ram usage:        3 bytes
  1562 ;; Hardware stack levels used:    1
  1563 ;; This function calls:
  1564 ;;		Nothing
  1565 ;; This function is called by:
  1566 ;;		_main
  1567 ;;		_LCD_init
  1568 ;;		_LCD_Set_Cursor
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           
  1573                           ;psect for function _LCD_command
  1574  0592                     _LCD_command:
  1575                           
  1576                           ;incstack = 0
  1577                           ; Regs used in _LCD_command: [wreg]
  1578                           ;LCD_command@cmd stored from wreg
  1579  0592  00F2               	movwf	LCD_command@cmd
  1580  0593                     l1113:
  1581                           
  1582                           ;LCD.c: 35: void LCD_command(unsigned char cmd);LCD.c: 36: {;LCD.c: 37:     PORTB = cmd;
  1583  0593  0872               	movf	LCD_command@cmd,w
  1584  0594  1283               	bcf	3,5	;RP0=0, select bank0
  1585  0595  1303               	bcf	3,6	;RP1=0, select bank0
  1586  0596  0086               	movwf	6	;volatile
  1587  0597                     l1115:
  1588                           
  1589                           ;LCD.c: 38:     RC5 = 0;
  1590  0597  1287               	bcf	7,5	;volatile
  1591  0598                     l1117:
  1592                           
  1593                           ;LCD.c: 39:     RC7 = 1;
  1594  0598  1787               	bsf	7,7	;volatile
  1595                           
  1596                           ;LCD.c: 40:     _delay((unsigned long)((4)*(20000000/4000.0)));
  1597  0599  301A               	movlw	26
  1598  059A  00F1               	movwf	??_LCD_command+1
  1599  059B  30F8               	movlw	248
  1600  059C  00F0               	movwf	??_LCD_command
  1601  059D                     u617:
  1602  059D  0BF0               	decfsz	??_LCD_command,f
  1603  059E  2D9D               	goto	u617
  1604  059F  0BF1               	decfsz	??_LCD_command+1,f
  1605  05A0  2D9D               	goto	u617
  1606  05A1  0000               	nop
  1607  05A2                     l1119:
  1608                           
  1609                           ;LCD.c: 41:     RC7 = 0;
  1610  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  1611  05A3  1303               	bcf	3,6	;RP1=0, select bank0
  1612  05A4  1387               	bcf	7,7	;volatile
  1613  05A5                     l112:
  1614  05A5  0008               	return
  1615  05A6                     __end_of_LCD_command:
  1616                           
  1617                           	psect	text7
  1618  0649                     __ptext7:	
  1619 ;; *************** function _LCD_Write_String *****************
  1620 ;; Defined at:
  1621 ;;		line 10 in file "LCD.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  Str             2    3[COMMON] PTR unsigned char 
  1624 ;;		 -> STR_1(6), main@buffer(7), 
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;  i               2    8[COMMON] int 
  1627 ;; Return value:  Size  Location     Type
  1628 ;;                  1    wreg      void 
  1629 ;; Registers used:
  1630 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1631 ;; Tracked objects:
  1632 ;;		On entry : 0/0
  1633 ;;		On exit  : 0/0
  1634 ;;		Unchanged: 0/0
  1635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1636 ;;      Params:         2       0       0       0       0
  1637 ;;      Locals:         2       0       0       0       0
  1638 ;;      Temps:          3       0       0       0       0
  1639 ;;      Totals:         7       0       0       0       0
  1640 ;;Total ram usage:        7 bytes
  1641 ;; Hardware stack levels used:    1
  1642 ;; Hardware stack levels required when called:    1
  1643 ;; This function calls:
  1644 ;;		_LCD_write_char
  1645 ;; This function is called by:
  1646 ;;		_main
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650                           
  1651                           ;psect for function _LCD_Write_String
  1652  0649                     _LCD_Write_String:
  1653  0649                     l1203:	
  1654                           ;incstack = 0
  1655                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1656                           
  1657                           
  1658                           ;LCD.c: 10: void LCD_Write_String(char* Str);LCD.c: 11: {;LCD.c: 12:   for(int i=0; Str[
      +                          i]!='\0'; i++)
  1659  0649  01F8               	clrf	LCD_Write_String@i
  1660  064A  01F9               	clrf	LCD_Write_String@i+1
  1661  064B  2E6E               	goto	l1209
  1662  064C                     l1205:
  1663                           
  1664                           ;LCD.c: 13:     LCD_write_char(Str[i]);
  1665  064C  0878               	movf	LCD_Write_String@i,w
  1666  064D  0773               	addwf	LCD_Write_String@Str,w
  1667  064E  00F6               	movwf	??_LCD_Write_String+1
  1668  064F  0874               	movf	LCD_Write_String@Str+1,w
  1669  0650  00F5               	movwf	??_LCD_Write_String
  1670  0651  1803               	skipnc
  1671  0652  0AF5               	incf	??_LCD_Write_String,f
  1672  0653  1FF8               	btfss	LCD_Write_String@i,7
  1673  0654  2E56               	goto	u480
  1674  0655  03F5               	decf	??_LCD_Write_String,f
  1675  0656                     u480:
  1676  0656  0875               	movf	??_LCD_Write_String,w
  1677  0657  00F7               	movwf	??_LCD_Write_String+2
  1678  0658  0877               	movf	??_LCD_Write_String+2,w
  1679  0659  1283               	bcf	3,5	;RP0=0, select bank0
  1680  065A  1303               	bcf	3,6	;RP1=0, select bank0
  1681  065B  00FF               	movwf	btemp+1
  1682  065C  0876               	movf	??_LCD_Write_String+1,w
  1683  065D  0084               	movwf	4
  1684  065E  120A  118A  2003  120A  118A  	fcall	stringtab
  1685  0663  120A  118A  257E  120A  118A  	fcall	_LCD_write_char
  1686  0668                     l1207:
  1687  0668  3001               	movlw	1
  1688  0669  07F8               	addwf	LCD_Write_String@i,f
  1689  066A  1803               	skipnc
  1690  066B  0AF9               	incf	LCD_Write_String@i+1,f
  1691  066C  3000               	movlw	0
  1692  066D  07F9               	addwf	LCD_Write_String@i+1,f
  1693  066E                     l1209:
  1694  066E  0878               	movf	LCD_Write_String@i,w
  1695  066F  0773               	addwf	LCD_Write_String@Str,w
  1696  0670  00F6               	movwf	??_LCD_Write_String+1
  1697  0671  0874               	movf	LCD_Write_String@Str+1,w
  1698  0672  00F5               	movwf	??_LCD_Write_String
  1699  0673  1803               	skipnc
  1700  0674  0AF5               	incf	??_LCD_Write_String,f
  1701  0675  1FF8               	btfss	LCD_Write_String@i,7
  1702  0676  2E78               	goto	u490
  1703  0677  03F5               	decf	??_LCD_Write_String,f
  1704  0678                     u490:
  1705  0678  0875               	movf	??_LCD_Write_String,w
  1706  0679  00F7               	movwf	??_LCD_Write_String+2
  1707  067A  0877               	movf	??_LCD_Write_String+2,w
  1708  067B  1283               	bcf	3,5	;RP0=0, select bank0
  1709  067C  1303               	bcf	3,6	;RP1=0, select bank0
  1710  067D  00FF               	movwf	btemp+1
  1711  067E  0876               	movf	??_LCD_Write_String+1,w
  1712  067F  0084               	movwf	4
  1713  0680  120A  118A  2003  120A  118A  	fcall	stringtab
  1714  0685  3A00               	xorlw	0
  1715  0686  1D03               	skipz
  1716  0687  2E89               	goto	u501
  1717  0688  2E8A               	goto	u500
  1718  0689                     u501:
  1719  0689  2E4C               	goto	l1205
  1720  068A                     u500:
  1721  068A                     l100:
  1722  068A  0008               	return
  1723  068B                     __end_of_LCD_Write_String:
  1724                           
  1725                           	psect	text8
  1726  057E                     __ptext8:	
  1727 ;; *************** function _LCD_write_char *****************
  1728 ;; Defined at:
  1729 ;;		line 44 in file "LCD.c"
  1730 ;; Parameters:    Size  Location     Type
  1731 ;;  ch              1    wreg     unsigned char 
  1732 ;; Auto vars:     Size  Location     Type
  1733 ;;  ch              1    2[COMMON] unsigned char 
  1734 ;; Return value:  Size  Location     Type
  1735 ;;                  1    wreg      void 
  1736 ;; Registers used:
  1737 ;;		wreg
  1738 ;; Tracked objects:
  1739 ;;		On entry : 0/0
  1740 ;;		On exit  : 0/0
  1741 ;;		Unchanged: 0/0
  1742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1743 ;;      Params:         0       0       0       0       0
  1744 ;;      Locals:         1       0       0       0       0
  1745 ;;      Temps:          2       0       0       0       0
  1746 ;;      Totals:         3       0       0       0       0
  1747 ;;Total ram usage:        3 bytes
  1748 ;; Hardware stack levels used:    1
  1749 ;; This function calls:
  1750 ;;		Nothing
  1751 ;; This function is called by:
  1752 ;;		_LCD_Write_String
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           
  1757                           ;psect for function _LCD_write_char
  1758  057E                     _LCD_write_char:
  1759                           
  1760                           ;incstack = 0
  1761                           ; Regs used in _LCD_write_char: [wreg]
  1762                           ;LCD_write_char@ch stored from wreg
  1763  057E  00F2               	movwf	LCD_write_char@ch
  1764  057F                     l1121:
  1765                           
  1766                           ;LCD.c: 44: void LCD_write_char(unsigned char ch);LCD.c: 45: {;LCD.c: 46:     PORTB = ch
      +                          ;
  1767  057F  0872               	movf	LCD_write_char@ch,w
  1768  0580  1283               	bcf	3,5	;RP0=0, select bank0
  1769  0581  1303               	bcf	3,6	;RP1=0, select bank0
  1770  0582  0086               	movwf	6	;volatile
  1771  0583                     l1123:
  1772                           
  1773                           ;LCD.c: 47:     RC5 = 1;
  1774  0583  1687               	bsf	7,5	;volatile
  1775  0584                     l1125:
  1776                           
  1777                           ;LCD.c: 48:     RC7 = 1;
  1778  0584  1787               	bsf	7,7	;volatile
  1779                           
  1780                           ;LCD.c: 49:     _delay((unsigned long)((4)*(20000000/4000.0)));
  1781  0585  301A               	movlw	26
  1782  0586  00F1               	movwf	??_LCD_write_char+1
  1783  0587  30F8               	movlw	248
  1784  0588  00F0               	movwf	??_LCD_write_char
  1785  0589                     u627:
  1786  0589  0BF0               	decfsz	??_LCD_write_char,f
  1787  058A  2D89               	goto	u627
  1788  058B  0BF1               	decfsz	??_LCD_write_char+1,f
  1789  058C  2D89               	goto	u627
  1790  058D  0000               	nop
  1791  058E                     l1127:
  1792                           
  1793                           ;LCD.c: 50:     RC7 = 0;
  1794  058E  1283               	bcf	3,5	;RP0=0, select bank0
  1795  058F  1303               	bcf	3,6	;RP1=0, select bank0
  1796  0590  1387               	bcf	7,7	;volatile
  1797  0591                     l115:
  1798  0591  0008               	return
  1799  0592                     __end_of_LCD_write_char:
  1800                           
  1801                           	psect	text9
  1802  05A6                     __ptext9:	
  1803 ;; *************** function _ADC_read *****************
  1804 ;; Defined at:
  1805 ;;		line 10 in file "ADC.c"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;		None
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;  ADC_val         2    4[COMMON] unsigned int 
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  2    0[COMMON] int 
  1812 ;; Registers used:
  1813 ;;		wreg, status,2, status,0
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1819 ;;      Params:         2       0       0       0       0
  1820 ;;      Locals:         2       0       0       0       0
  1821 ;;      Temps:          2       0       0       0       0
  1822 ;;      Totals:         6       0       0       0       0
  1823 ;;Total ram usage:        6 bytes
  1824 ;; Hardware stack levels used:    1
  1825 ;; This function calls:
  1826 ;;		Nothing
  1827 ;; This function is called by:
  1828 ;;		_main
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832                           
  1833                           ;psect for function _ADC_read
  1834  05A6                     _ADC_read:
  1835  05A6                     l1175:	
  1836                           ;incstack = 0
  1837                           ; Regs used in _ADC_read: [wreg+status,2+status,0]
  1838                           
  1839                           
  1840                           ;ADC.c: 13:     ADCON0bits.CHS = 0;
  1841  05A6  30C7               	movlw	-57
  1842  05A7  1283               	bcf	3,5	;RP0=0, select bank0
  1843  05A8  1303               	bcf	3,6	;RP1=0, select bank0
  1844  05A9  059F               	andwf	31,f	;volatile
  1845  05AA                     l1177:
  1846                           
  1847                           ;ADC.c: 14:     ADON = 1;
  1848  05AA  141F               	bsf	31,0	;volatile
  1849  05AB                     l1179:
  1850                           
  1851                           ;ADC.c: 15:     _delay((unsigned long)((1)*(20000000/4000.0)));
  1852  05AB  3007               	movlw	7
  1853  05AC  00F3               	movwf	??_ADC_read+1
  1854  05AD  307D               	movlw	125
  1855  05AE  00F2               	movwf	??_ADC_read
  1856  05AF                     u637:
  1857  05AF  0BF2               	decfsz	??_ADC_read,f
  1858  05B0  2DAF               	goto	u637
  1859  05B1  0BF3               	decfsz	??_ADC_read+1,f
  1860  05B2  2DAF               	goto	u637
  1861  05B3                     l1181:
  1862                           
  1863                           ;ADC.c: 16:     GO_DONE = 1;
  1864  05B3  1283               	bcf	3,5	;RP0=0, select bank0
  1865  05B4  1303               	bcf	3,6	;RP1=0, select bank0
  1866  05B5  151F               	bsf	31,2	;volatile
  1867  05B6                     l1183:
  1868                           
  1869                           ;ADC.c: 17:     unsigned int ADC_val = (ADRESH<<8) + ADRESL;
  1870  05B6  081E               	movf	30,w	;volatile
  1871  05B7  00F5               	movwf	ADC_read@ADC_val+1
  1872  05B8  1683               	bsf	3,5	;RP0=1, select bank1
  1873  05B9  1303               	bcf	3,6	;RP1=0, select bank1
  1874  05BA  081E               	movf	30,w	;volatile
  1875  05BB  00F4               	movwf	ADC_read@ADC_val
  1876  05BC                     l1185:
  1877                           
  1878                           ;ADC.c: 18:     return ADC_val;
  1879  05BC  0875               	movf	ADC_read@ADC_val+1,w
  1880  05BD  00F1               	movwf	?_ADC_read+1
  1881  05BE  0874               	movf	ADC_read@ADC_val,w
  1882  05BF  00F0               	movwf	?_ADC_read
  1883  05C0                     l140:
  1884  05C0  0008               	return
  1885  05C1                     __end_of_ADC_read:
  1886                           
  1887                           	psect	text10
  1888  0576                     __ptext10:	
  1889 ;; *************** function _ADC_init *****************
  1890 ;; Defined at:
  1891 ;;		line 5 in file "ADC.c"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;		None
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;		None
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  1    wreg      void 
  1898 ;; Registers used:
  1899 ;;		wreg, status,2
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/0
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1905 ;;      Params:         0       0       0       0       0
  1906 ;;      Locals:         0       0       0       0       0
  1907 ;;      Temps:          0       0       0       0       0
  1908 ;;      Totals:         0       0       0       0       0
  1909 ;;Total ram usage:        0 bytes
  1910 ;; Hardware stack levels used:    1
  1911 ;; This function calls:
  1912 ;;		Nothing
  1913 ;; This function is called by:
  1914 ;;		_main
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918                           
  1919                           ;psect for function _ADC_init
  1920  0576                     _ADC_init:
  1921  0576                     l1159:	
  1922                           ;incstack = 0
  1923                           ; Regs used in _ADC_init: [wreg+status,2]
  1924                           
  1925                           
  1926                           ;ADC.c: 7:     ADCON0 = 0x00;
  1927  0576  1283               	bcf	3,5	;RP0=0, select bank0
  1928  0577  1303               	bcf	3,6	;RP1=0, select bank0
  1929  0578  019F               	clrf	31	;volatile
  1930  0579                     l1161:
  1931                           
  1932                           ;ADC.c: 8:     ADCON1 = 0xCE;
  1933  0579  30CE               	movlw	206
  1934  057A  1683               	bsf	3,5	;RP0=1, select bank1
  1935  057B  1303               	bcf	3,6	;RP1=0, select bank1
  1936  057C  009F               	movwf	31	;volatile
  1937  057D                     l137:
  1938  057D  0008               	return
  1939  057E                     __end_of_ADC_init:
  1940  007E                     btemp	set	126	;btemp
  1941  007E                     wtemp0	set	126
  1942                           
  1943                           	psect	config
  1944                           
  1945                           ;Config register CONFIG @ 0x2007
  1946                           ;	Oscillator Selection bits
  1947                           ;	FOSC = HS, HS oscillator
  1948                           ;	Watchdog Timer Enable bit
  1949                           ;	WDTE = OFF, WDT disabled
  1950                           ;	Power-up Timer Enable bit
  1951                           ;	PWRTE = ON, PWRT enabled
  1952                           ;	Brown-out Reset Enable bit
  1953                           ;	BOREN = ON, BOR enabled
  1954                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1955                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1956                           ;	Data EEPROM Memory Code Protection bit
  1957                           ;	CPD = OFF, Data EEPROM code protection off
  1958                           ;	Flash Program Memory Write Enable bits
  1959                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1960                           ;	In-Circuit Debugger Mode bit
  1961                           ;	DEBUG = 0x1, unprogrammed default
  1962                           ;	Flash Program Memory Code Protection bit
  1963                           ;	CP = OFF, Code protection off
  1964  2007                     	org	8199
  1965  2007  3F72               	dw	16242

Data Sizes:
    Strings     6
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     22      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 7
		 -> main@buffer(BANK0[7]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 7
		 -> main@buffer(BANK0[7]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 7
		 -> main@buffer(BANK0[7]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 7
		 -> main@buffer(BANK0[7]), 

    LCD_Write_String@Str	PTR unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[6]), main@buffer(BANK0[7]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 7
		 -> main@buffer(BANK0[7]), 


Critical Paths under _main in COMMON

    _main->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _LCD_init->_LCD_command
    _LCD_Write_String->_LCD_write_char

Critical Paths under _main in BANK0

    _main->_itoa
    _itoa->_utoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    2019
                                             10 BANK0     12    12      0
                           _ADC_init
                           _ADC_read
                   _LCD_Write_String
                        _LCD_command
                           _LCD_init
                               _itoa
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 7     3      4    1612
                                             13 COMMON     1     1      0
                                              4 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     5      4    1264
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0      22
                                              3 COMMON     2     2      0
                        _LCD_command
 ---------------------------------------------------------------------------------
 (2) _LCD_command                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     7     5      2     264
                                              3 COMMON     7     5      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_char                                       3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             6     4      2      23
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _ADC_read
   _LCD_Write_String
     _LCD_write_char
   _LCD_command
   _LCD_init
     _LCD_command
   _itoa
     _utoa
       ___lwdiv
       ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      16       5       27.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Tue Dec 28 00:33:08 2021

                        pc 0002                         l32 07EE                         l29 07EA  
                       fsr 0004                        l100 068A                        l112 05A5  
                      l115 0591                        l140 05C0                        l118 060E  
                      l137 057D                        l553 06CE                        l563 0648  
                      l741 0729                        l743 0740                        l735 05E6  
                      _RC1 0039                        _RC4 003C                        _RC5 003D  
                      _RC7 003F                        u310 0693                        u311 0692  
                      u400 0627                        u401 0626                        u330 06A5  
                      u410 0631                        u331 06A4                        u411 0630  
                      u500 068A                        u501 0689                        u325 0697  
                      u350 06B6                        u430 0644                        u510 07EA  
                      u351 06B5                        u431 0643                        u415 062D  
                      u511 07E9                        u440 06F3                        u520 07EE  
                      _PEN 048A                        u345 06A6                        u425 0638  
                      u441 06F2                        u521 07ED                        u370 06CA  
                      u450 0725                        u530 07F2                        u371 06C9  
                      u355 06B2                        u451 0724                        u531 07F1  
                      u380 0615                        u460 073C                        u365 06BE  
                      u381 0614                        u461 073B                        u470 05C8  
                      u607 05EB                        u471 05C7                        u480 0656  
                      u617 059D                        u490 0678                        u627 0589  
                      u395 0619                        u547 074E                        _SEN 0488  
                      u637 05AF                        u557 0760                        u567 0772  
                      u577 0784                        u587 0796                        u597 07A8  
                      _RX9 00C6                        _TX9 04C6                        fsr0 0004  
                      indf 0000        LCD_Write_String@Str 0073                       l1101 0627  
                     l1103 0631                       l1121 057F                       l1113 0593  
                     l1105 0637                       l1123 0583                       l1203 0649  
                     l1115 0597                       l1107 063E                       l1131 06D6  
                     l1211 0741                       l1125 0584                       l1205 064C  
                     l1117 0598                       l1109 0644                       l1141 06F9  
                     l1133 06E9                       l1221 0767                       l1213 0744  
                     l1127 058E                       l1207 0668                       l1119 05A2  
                     l1071 0696                       l1151 0734                       l1143 070C  
                     l1135 06ED                       l1231 078E                       l1223 076A  
                     l1215 0746                       l1161 0579                       l1209 066E  
                     l1081 06BC                       l1073 069D                       l1065 068B  
                     l1153 0736                       l1145 071D                       l1137 06F3  
                     l1129 06D2                       l1241 07B9                       l1233 079D  
                     l1225 0779                       l1217 0755                       l1171 0602  
                     l1163 05E7                       l1083 06BD                       l1075 06A1  
                     l1067 068D                       l1091 060F                       l1155 073C  
                     l1147 0725                       l1139 06F7                       l1251 07E4  
                     l1243 07B9                       l1235 07A0                       l1227 077C  
                     l1219 0758                       l1181 05B3                       l1173 0608  
                     l1165 05F0                       l1085 06C4                       l1077 06A5  
                     l1069 0693                       l1093 0615                       l1149 072D  
                     l1245 07C4                       l1237 07AF                       l1229 078B  
                     l1159 0576                       l1183 05B6                       l1175 05A6  
                     l1167 05F6                       l1079 06B6                       l1087 06CA  
                     l1095 0618                       l1191 05C4                       l1255 07F2  
                     l1247 07D2                       l1239 07B4                       l1185 05BC  
                     l1177 05AA                       l1169 05FC                       l1097 061F  
                     l1193 05C8                       l1249 07DB                       l1179 05AB  
                     l1099 0623                       l1195 05CF                       l1197 05D3  
                     l1189 05C4                       l1199 05D8                       _ADON 00F8  
                     STR_1 0013               ?_LCD_command 0070                       _BRGH 04C2  
                     _CREN 00C4                       _RCIF 0065                       _SPEN 00C7  
                     _TXEN 04C5                       _TXIF 0064                       _SYNC 04C4  
        ?_LCD_Write_String 0073                       _main 0741                       _itoa 05C1  
                     btemp 007E                       _utoa 06CF                main@outcome 0034  
                     start 0000         ??_LCD_Write_String 0075           __end_of_ADC_init 057E  
         __end_of_ADC_read 05C1           __end_of_LCD_init 060F                      ?_main 0070  
                    ?_itoa 0024                      ?_utoa 0078            __end_of___lwdiv 06CF  
          __end_of___lwmod 0649                      _RCREG 001A                      _SPBRG 0099  
                    _PORTB 0006                      _TRISB 0086                      _TRISC 0087  
                    _SSPIF 0063                      _TXREG 0019                      pclath 000A  
                    utoa@c 0022                      utoa@v 0020                      status 0003  
                    wtemp0 007E            __initialization 07FC               __end_of_main 07FC  
             __end_of_itoa 05E7               __end_of_utoa 0741                     ??_main 002A  
                   ??_itoa 007D                     ??_utoa 007C                     _ADCON0 001F  
                   _ADCON1 009F                     _ADRESH 001E                     _ADRESL 009E  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _TRISC6 043E                     _TRISC7 043F                     _SSPCON 0014  
                   _SSPBUF 0013                  ??___lwdiv 0074                  ??___lwmod 0074  
  __size_of_LCD_write_char 0014            ADC_read@ADC_val 0074                  ?_ADC_init 0070  
                ?_ADC_read 0070    __end_of__initialization 07FC       __size_of_LCD_command 0014  
                ?_LCD_init 0070             __pcstackCOMMON 0070                 ??_ADC_init 0070  
               ??_ADC_read 0072                 ??_LCD_init 0073                 __pmaintext 0741  
                  _ACKSTAT 048E  __size_of_LCD_Write_String 0042                    _GO_DONE 00FA  
                  _SSPSTAT 0094                 __stringtab 0003             _LCD_write_char 057E  
                  ___lwdiv 068B                    ___lwmod 060F                    __ptext1 05C1  
                  __ptext2 06CF                    __ptext3 060F                    __ptext4 068B  
                  __ptext5 05E7                    __ptext6 0592                    __ptext7 0649  
                  __ptext8 057E                    __ptext9 05A6           LCD_write_char@ch 0072  
     end_of_initialization 07FC                    itoa@buf 0029                    itoa@val 0024  
   __end_of_LCD_write_char 0592                    utoa@buf 0023                    utoa@val 0078  
        __size_of_ADC_init 0008          __size_of_ADC_read 001B          LCD_Write_String@i 0078  
               main@buffer 002D          __size_of_LCD_init 0028            ?_LCD_write_char 0070  
         _LCD_Write_String 0649        start_initialization 07FC              ??_LCD_command 0070  
                ___latbits 0002              __pcstackBANK0 0020        __end_of_LCD_command 05A6  
         ___lwdiv@dividend 0072                   ?___lwdiv 0070                   ?___lwmod 0070  
                __pstrings 0003                   _ADC_init 0576                   _ADC_read 05A6  
         ___lwdiv@quotient 0075                   _LCD_init 05E7                 _ADCON0bits 001F  
              __stringbase 0012                _LCD_command 0592   __end_of_LCD_Write_String 068B  
         ??_LCD_write_char 0070           __size_of___lwdiv 0044           __size_of___lwmod 003A  
       __end_of__stringtab 0013            ___lwdiv@divisor 0070            ___lwdiv@counter 0077  
                 __ptext10 0576              __size_of_main 00BB              __size_of_itoa 0026  
            __size_of_utoa 0072                   itoa@base 0026           ___lwmod@dividend 0072  
                stringcode 000D                   utoa@base 007A            ___lwmod@divisor 0070  
          ___lwmod@counter 0075                   stringdir 000D                   stringtab 0003  
           LCD_command@cmd 0072  
